@mixin opacity($value: 0.5, $transition:0.25) {
    opacity: $value;filter: alpha(opacity=$value*100);filter: progid:DXImageTransform.Microsoft.Alpha(opacity=#{$value*100});
    transition:$transition+s;-webkit-transition:$transition+s;-moz-transition:$transition+s;-ms-transition:$transition+s;-o-transition:$transition+s;
}
@mixin hover-opacity($value: 0.5, $transition:0.25){
    &:hover{
        filter: alpha(opacity=$value*100);filter: progid:DXImageTransform.Microsoft.Alpha(opacity=#{$value*100});opacity: $value;
        transition:$transition+s;-webkit-transition:$transition+s;-moz-transition:$transition+s;-ms-transition:$transition+s;-o-transition:$transition+s;
    }    
}
.opacity-1{@include opacity(0.1);}
.opacity-2{@include opacity(0.2);}
.opacity-3{ @include opacity(0.3);}
.opacity-4{ @include opacity(0.4);}
.opacity-5{ @include opacity(0.5);}
.opacity-6{ @include opacity(0.6);}
.opacity-7{ @include opacity(0.7);}
.opacity-8{ @include opacity(0.8);}
.opacity-9{ @include opacity(0.9);}
.opacity-10{ @include opacity(1);}

.hover-opacity-1{@include hover-opacity(0.1);}
.hover-opacity-2{@include hover-opacity(0.2);}
.hover-opacity-3{ @include hover-opacity(0.3);}
.hover-opacity-4{ @include hover-opacity(0.4);}
.hover-opacity-5{ @include hover-opacity(0.5);}
.hover-opacity-6{ @include hover-opacity(0.6);}
.hover-opacity-7{ @include hover-opacity(0.7);}
.hover-opacity-8{ @include hover-opacity(0.8);}
.hover-opacity-9{ @include hover-opacity(0.9);}
.hover-opacity-10{ @include hover-opacity(1);}

@mixin filter($filter-type,$filter-amount) { 
    filter: $filter-type+unquote('(#{$filter-amount})');-webkit-filter: $filter-type+unquote('(#{$filter-amount})');-moz-filter: $filter-type+unquote('(#{$filter-amount})');-ms-filter: $filter-type+unquote('(#{$filter-amount})');-o-filter: $filter-type+unquote('(#{$filter-amount})');     
} 
@mixin zoom($value:1.5) {
    transform: scale($value);
    -webkit-transform: scale($value);
    -moz-transform: scale($value); 
    -o-transform: scale($value);
}
@mixin transition($value:0.5) {
    -webkit-transition:$value+s!important;
    -moz-transition:$value+s!important;
    -ms-transition:$value+s!important;
    -o-transition:$value+s!important;
    transition:$value+s!important;
}
@mixin transform($xvalue:0, $yvalue:0) {     
    -webkit-transform: translate($xvalue, $yvalue); 
    -moz-transform: translate($xvalue, $yvalue); 
    -o-transform: translate($xvalue, $yvalue); 
    -ms-transform: translate($xvalue, $yvalue);  
    transform: translate($xvalue, $yvalue); 
}
@mixin media-breakpoint-min($width) {
    @media screen and (min-width: $width) {
      @content;
    }    
}
@mixin media-breakpoint-max($width) {
  @media screen and (max-width: $width) {
    @content;
  }    
}
@mixin linear-gradient($direction:'to top', $color-stops...) {
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
  }
  //direction: to top,to right,to bottom,to left,to top right,to top left,to bottom right,to bottom left,
  //@include linear-gradient(hotpink, tomato);